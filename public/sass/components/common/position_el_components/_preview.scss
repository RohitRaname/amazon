.preview {
  .overlay {
    z-index: 100;
  }

  &-parent {
    position: relative;
  }

  &-parent[data-preview-parent='abs'] {
    position: absolute;
  }

  &-parent[data-active='true'] {
    z-index: 100;
    & > * {
      visibility: hidden;
    }
  }

  &-parent[data-active='true'] .preview,
  &-parent[data-preview-parent='abs'][data-active='true'] .preview {
    display: block;
    visibility: visible;
    animation: fade 0.25s ease-in both;
  }

  &-parent[data-active='false'] .preview,
  &-parent[data-preview-parent='abs'][data-active='false'] .preview {
    display: none;
  }

  &-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 35rem;
    background: var(--default-background);
    @include f-col;
    color: var(--default-text);
    font-weight: 400;
    font-size: $font-size-md;
    border-radius: $radius-lg;
    box-shadow: 0 0 2.4rem 0.1rem rgba($color-grey, 0.24);
    border: var(--border-line);
    z-index: 1000;
    text-align: left;
    padding: 0.7rem 0;
  }

  &-header {
    padding: $padding-lw $padding-md;
  }

  // optional for those which have more than

  &-item {
    cursor: pointer;

    padding: $padding-sm $padding-md;
    @include f-center;
    justify-content: start;
    column-gap: $gap-sm;
    position: relative;
    // row-gap: 0.5rem;

    display: grid;
    grid-template-columns: min-content max-content 1fr;

    align-items: center;
    transition: all 0.15s;

    &--sm {
      padding: 0.8rem $padding-md;
      column-gap: $gap-md;
    }

    &-no-hover {
      background: transparent !important;
      cursor: default !important;
    }

    &[data-no-hover-change] {
      background: transparent !important;
      align-items: start;
      padding: 0;
    }

    &:hover {
      background: var(--background-hover);
    }

    &[data-col='1'] {
      grid-template-columns: auto;
    }
    &[data-col='2'] {
      grid-template-columns: 1fr min-content;
    }
  }

  // show underline when text el hover
  &-item[data-hover] {
    background: transparent;
    .preview {
      &-img:hover {
        filter: brightness(92%);
      }

      &-title {
        position: relative;
      }

      &-title::before {
        content: '';
        position: absolute;
        bottom: 20%;
        left: 0;
        width: 100%;
        height: 0.12rem;
        background: transparent;
      }

      &-title:hover::before {
        background: var(--default-text);
        // border-bottom: 2px solid var(--default-text);
      }
    }
  }

  &-content {
    padding: $padding-sm $padding-md;
  }

  // .preview-item  components  *****************************
  &-item-content {
    display: flex;
    gap: $gap-sm;

    // updated
    grid-column: 1/-1;
    width: 85%;
  }

  &-img,
  &-title,
  &-extra,
  &-state button {
    display: inline-block;
  }

  &-img,
  &-iconBox {
    border-radius: 50%;
    height: 4rem;
    width: 4rem;
    // transform: translateY(0.4rem);
  }

  &-upload-img {
    justify-self: end;
    img {
      height: 7rem;
      width: 5.5rem;
      border-radius: $radius-md;
      object-fit: cover;
    }
  }

  &-details {
    & > * {
      display: flex;
      justify-content: start;
      align-items: center;
      gap: 1rem;
    }
    &-col {
      display: flex;
      flex-direction: column;

      // stretch behave flex child el as block but if we use start (inline-block)
      align-items: start;
      & > * {
        display: inline-block;
      }
    }
  }

  &-title {
    font-size: $font-size-md;
    font-weight: 500;
    margin-bottom: -0.3rem !important;
    word-break: break-word;
  }

  &-text {
    font-size: $font-size-sm;
    color: var(--default-text);
    font-weight: 300;
  }

  &-extra {
    color: var(--text-dim);
    font-size: $font-size-sm;
    font-weight: 400;
    margin-bottom: 0.4rem;
  }

  &-state {
    background: transparent !important;
    color: var(--color-primary);
    grid-row: 1/3;
    grid-column: 3;
    justify-self: end;
    display: none;
    font-size: $default-font-size;

    // updated
    position: absolute;
    top: 0.2rem;
    right: 1.4rem;
  }

  /////////////////////////////////////////////////////////////////////////

  &-item[data-active='true'] &-state {
    display: block !important;
  }
  &-item[data-active='false'] &-state {
    display: none;
  }

  &-item[data-state] &-state {
    display: block !important;
  }
}
